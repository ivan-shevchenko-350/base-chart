{{- if eq .Values.statefulset.enabled false }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "base-chart.fullname" . }}
  labels:
    {{- include "base-chart.labels" . | nindent 4 }}
spec:
{{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
{{- end }}
  selector:
    matchLabels:
      {{- include "base-chart.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
    {{- if .Values.recreatePods }}
        rollme: {{ randAlphaNum 5 | quote }}
    {{- end }}
    {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "base-chart.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds | default 30 }}
      {{- if .Values.initContainers }}
      initContainers:
      {{- tpl .Values.initContainers . | nindent 8 }}
      {{- end  }}
      serviceAccountName: {{ include "base-chart.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ include "base-chart.fullname" . }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
            {{- with .Values.command }}
          command:
            {{- toYaml . | nindent 12 }}
          {{- end }}
            {{- with .Values.args }}
          args:
            {{- toYaml . | nindent 12 }}
          {{- end }}

          {{- if or .Values.envFrom (eq .Values.wrapped_env.enabled true) }}
          envFrom:
          {{- with .Values.envFrom }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
              {{- if eq .Values.wrapped_env.enabled true }}
              {{- if eq .Values.wrapped_env.type "Secret" }}
            - secretRef:
                name: {{ include "base-chart.fullname" . }}-env
              {{- end }}
              {{- if eq .Values.wrapped_env.type "ConfigMap" }}
            - configMapRef:
                name: {{ include "base-chart.fullname" . }}-env
              {{- end }}
              {{- end }}
          {{- end }}

          env:
            {{- if not (empty .Values.environment) }}
            {{- with .Values.environment }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
            {{- end }}
                {{- if .Values.JAVA_OPTS }}
            - name: JAVA_OPTS
              value: {{ join " " .Values.JAVA_OPTS | quote }}
                {{- end }}
                {{- if .Values.JMX_OPTS }}
            - name: JMX_OPTS
              value: {{ join " " .Values.JMX_OPTS | quote }}
                {{- end }}
                {{- range $name, $value := .Values.env }}
                {{- if not (empty $value) }}
            - name: {{ $name }}
              value: {{ $value | quote }}
                {{- end }}
                {{- end }}
          volumeMounts:
            {{- with .Values.volumeMounts }}
            {{- range . }}
            - mountPath: {{ .mountPath }}
              name: {{ .name }}
              {{ if .subPath }}subPath: {{ .subPath }}{{ end }}
            {{- end }}
            {{- end }}

            {{- if .Values.files }}
            {{- range .Values.files }}
            - mountPath: {{ .mountPath }}
              name: files
              {{- range $name, $value := .data }}
              subPath: ..data/{{ $name }}
              {{- end }}
            {{- end }}
            {{- end }}

            {{- if .Values.binaryFiles }}
            {{- range .Values.binaryFiles }}
            - mountPath: {{ .mountPath }}
              name: files
              {{- range $name, $value := .data }}
              subPath: ..data/{{ $name }}
              {{- end }}
            {{- end }}
            {{- end }}

            {{- if .Values.fileLoad.enabled }}
            - mountPath: {{ .Values.fileLoad.mountPath }}
              name: files-config
            {{- end }}

          ports:
            {{- range .Values.service.services }}
            - name: {{ .name }}
              containerPort: {{ .targetPort }}
              protocol: {{ .protocol }}
            {{- end }}
            {{- if .Values.lifecycle }}
          lifecycle:
            {{- toYaml .Values.lifecycle | nindent 12 }}
            {{- end }}
            {{- if .Values.startupProbe }}
          startupProbe:
            {{- toYaml .Values.startupProbe | nindent 12 }}
            {{- end }}
            {{- if .Values.livenessProbe }}
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
            {{- end }}
            {{- if .Values.readinessProbe }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
            {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}

      {{- if .Values.sidecars  }}
      {{- tpl .Values.sidecars . | nindent 8 }}
      {{- end }}

      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
      {{- if or .Values.files .Values.binaryFiles }}
        - name: files
          configMap:
            name: {{ include "base-chart.fullname" . }}
      {{- end }}
      {{- if .Values.fileLoad.enabled }}
        - name: files-config
          configMap:
            name: {{ include "base-chart.fullname" . }}-config
      {{- end }}
      {{- if .Values.emptyDir.enable }}
        - name: {{ .Values.emptyDir.name }}
          emptyDir: {}
      {{- end }}
{{- end }}
